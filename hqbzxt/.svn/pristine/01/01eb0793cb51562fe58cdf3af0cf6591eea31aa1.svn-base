<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.hqbz.mapper.inventory.InventoryMapper" >
  <resultMap id="BaseResultMap" type="com.yj.hqbz.model.inventory.Inventory" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="FK_ORGID" property="orgid" jdbcType="DECIMAL" />
    <result column="FK_GOODSID" property="goodsid" jdbcType="VARCHAR" />
    <result column="GOODSCODE" property="goodsCode" jdbcType="VARCHAR" />
    <result column="GOODSNAME" property="goodsName" jdbcType="VARCHAR" />
    <result column="UNIT" property="unit" jdbcType="VARCHAR" />
    <result column="GOODSTYPENAME" property="goodsTypeName" jdbcType="VARCHAR" />
    <result column="SPEC" property="spec" jdbcType="VARCHAR" />
    <result column="SPEC_INFO" property="specInfo" jdbcType="VARCHAR" />
    <result column="FK_SKUID" property="skuid" jdbcType="VARCHAR" />
    <result column="SKUCODE" property="skuCode" jdbcType="VARCHAR" />
    <result column="INTYPE" property="inType" jdbcType="DECIMAL" />
    <result column="INDATE" property="inDate" jdbcType="TIMESTAMP" />
    <result column="QTY" property="qty" jdbcType="DECIMAL" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="FK_TRACEID" property="traceid" jdbcType="VARCHAR" />
    <result column="TRACENO" property="traceNo" jdbcType="VARCHAR" />
    <result column="ORDERNO" property="orderNo" jdbcType="VARCHAR" />
    <result column="ISINTERVAL" property="isInterval" jdbcType="VARCHAR" />
    <result column="FK_SUPPLIER_ID" property="supplierid" jdbcType="DECIMAL" />
    <result column="PRODATE" property="proDate" jdbcType="TIMESTAMP" />
    <result column="INTERVALDATE" property="intervalDate" jdbcType="TIMESTAMP" />
    <result column="USELIFEDATE" property="uselifeDate" jdbcType="TIMESTAMP" />
    <result column="TOTAL" property="total" jdbcType="DECIMAL" />
    <result column="WAREHOUSE" property="warehouse" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="VOUCHERCODE" property="voucherCode" jdbcType="VARCHAR" />
    <result column="LIABLEPERSON" property="liablePerson" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, FK_ORGID, FK_GOODSID, FK_SKUID, INTYPE, INDATE, QTY, PRICE, FK_TRACEID, TRACENO, 
    ORDERNO, FK_SUPPLIER_ID, PRODATE, INTERVALDATE, USELIFEDATE, TOTAL, WAREHOUSE
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from INVENTORY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getStockById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select i.*,g.GOODSNAME,g.CODE as GOODSCODE
    from INVENTORY i,GOODS g
    where i.FK_GOODSID=g.GOODSID and i.ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getNotInStoreOrderBill" parameterType="java.util.Map" resultMap="com.yj.hqbz.mapper.order.OrderFormMapper.BaseResultMap">
  	select f.ID,f.ORDER_NO,f.ADDTIME,f.DELIVERY_DATE,f.TOTAL,f.ORDER_STATUS,
  		   f.STORE_ID,o.NAME as STORE_NAME,f.USER_ID,u.TRUENAME as USER_NAME
  	from ORDERFORM f,HQXT_USER u,ORGANIZATION o
  	where f.USER_ID=u.USERID and f.STORE_ID=o.ORGID and f.DELETESTATUS=0 
  		  and f.ORDER_STATUS=60 and f.ORG_ID=#{orgid,jdbcType=DECIMAL} 
  		  and exists(select 1 from ORDER_DETAIL d,GOODS_TRACE tr,GOODS g,GOODSTYPE t 
  		  			 where d.FK_ORDERID=tr.FK_ORDERID and d.DETAIL_ID=tr.FK_ORDER_DETAILID and tr.TRACE_TYPE=0
  		  			 and tr.FK_GOODSID=g.GOODSID and g.FK_GOODSTYPEID=t.TYPEID and t.BUSINESSATTR=1
  		  			 and d.INSTORE_STATUS=0 and d.FK_ORDERID=f.ID)
  	order by f.ORDER_NO
  </select>
  
  <select id="getOrderDetail" parameterType="java.lang.String" resultType="map">
  	select g.GOODSID as "goodsid",g.CODE as "goodsCode",g.GOODSNAME as "goodsName",
  		   t.TYPEID as "goodsTypeid",t.TYPENAME as "goodsTypeName",
  		   d.QTY as "qty",d.QTY_BASIC as "qtyBasic",d.AUIXUNIT as "auixUnit",d.UNIT as "unit",
  		   d.PRICE as "price",d.PRICE_BASIC as "priceBasic",d.REAL_QTY as "realQty",
  		   tr.ID as "traceid",tr.BATCHNO as "traceNo",d.spec_info as "specInfo",
  		   to_char(tr.PRODATE,'yyyy/MM/dd') as "proDate",
  		   to_char(tr.INTERVALDATE,'yyyy/MM/dd') as "intervalDate",
  		   to_char(tr.USELIFEDATE,'yyyy/MM/dd') as "uselifeDate",
  		   case when to_char(sysdate,'yyyy-MM-dd')>to_char(tr.INTERVALDATE,'yyyy-MM-dd') 
  		   		and to_char(sysdate,'yyyy-MM-dd') &lt;=to_char(tr.USELIFEDATE,'yyyy-MM-dd') then '临期'
  		   	 	when to_char(sysdate,'yyyy-MM-dd')>to_char(tr.USELIFEDATE,'yyyy-MM-dd') then '过期'
  		   	 	else '新鲜' end as "status"
  	from ORDERFORM f,ORDER_DETAIL d,GOODS_TRACE tr,GOODS g,GOODSTYPE t
  	where f.ID=d.FK_ORDERID and d.FK_ORDERID=tr.FK_ORDERID and d.DETAIL_ID=tr.FK_ORDER_DETAILID and tr.TRACE_TYPE=0
  		  and tr.FK_GOODSID=g.GOODSID and g.FK_GOODSTYPEID=t.TYPEID and t.BUSINESSATTR=1
  		  and d.INSTORE_STATUS=0 and d.FK_ORDERID=#{orderid,jdbcType=VARCHAR}
  </select>
  
  <!-- =================库存===================== -->
  <sql id="param">
  	<if test="goodsName!=null and goodsName!=''">
  		and instr(GOODSNAME,#{goodsName,jdbcType=VARCHAR})>0
  	</if>
  	<if test="warehouse!=null and warehouse!=''">
  		and instr(WAREHOUSE,#{warehouse,jdbcType=VARCHAR})>0
  	</if>
  	<if test="isInterval!=null">
  		and ISINTERVAL=#{isInterval,jdbcType=DECIMAL}
  	</if>
  	<if test="haveQty==1">
  		and QTY!=0
  	</if>
  	<if test="haveQty==0">
  		and QTY=0
  	</if>
  </sql>
  
  <sql id="orderBy">
  	<choose>
  		<when test="orderBy!=null and orderBy!=''">
  			<choose>
		  		<when test="orderBy=='goodsName' or orderBy=='goodsTypeName' or orderBy=='warehouse'">
		  			NLSSORT(#{orderBy},'NLS_SORT=SCHINESE_PINYIN_M') 
		  		</when>
		  		<otherwise>
		  			#{orderBy}
		  		</otherwise>
		  	</choose>
		  	<if test="orderType==1">
		  		desc
		  	</if>
  		</when>
  		<otherwise>
  			SKUCODE
  		</otherwise>
  	</choose>
  </sql>
  <sql id="orderBy2">
  	<choose>
  		<when test="orderBy!=null and orderBy!=''">
  			<choose>
		  		<when test="orderBy=='goodsName' or orderBy=='goodsTypeName' or orderBy=='warehouse'">
		  			NLSSORT(#{orderBy},'NLS_SORT=SCHINESE_PINYIN_M') 
		  		</when>
		  		<otherwise>
		  			#{orderBy}
		  		</otherwise>
		  	</choose>
		  	<if test="orderType==1">
		  		desc
		  	</if>
  		</when>
  		<otherwise>
  			INDATE
  		</otherwise>
  	</choose>
  </sql>
  
  <select id="getStockBill" parameterType="java.util.Map"  resultMap="BaseResultMap">
	  select * from(
		  	select i.FK_GOODSID,g.GOODSNAME,g.UNIT,g.CODE as GOODSCODE,i.FK_SKUID,s.SKUCODE,
		  		   t.TYPENAME as GOODSTYPENAME,sum(i.QTY) as QTY,max(i.INDATE) as INDATE,i.INTYPE,
		  		   case when to_char(sysdate,'yyyy-MM-dd') &lt;= to_char(min(i.INTERVALDATE),'yyyy-MM-dd') then 0 else 1 end as ISINTERVAL,s.SPEC
		  	from GOODS g,GOODSTYPE t,INVENTORY i
		  	left join SKU s on i.FK_SKUID=s.SKUID
		  	where i.FK_GOODSID=g.GOODSID and g.FK_GOODSTYPEID=t.TYPEID and i.INTYPE=0
		  		  and i.QTY!=0 and i.FK_ORGID=#{orgid,jdbcType=DECIMAL}
		  	group by i.FK_GOODSID,g.UNIT,g.GOODSNAME,g.CODE,i.FK_SKUID,s.SKUCODE,t.TYPENAME,i.INTYPE,s.SPEC
		  	union
		  	select i.FK_GOODSID,g.GOODSNAME,g.UNIT,g.CODE as GOODSCODE,null as FK_SKUID,null as SKUCODE,
		  		   t.TYPENAME as GOODSTYPENAME,sum(i.QTY) as QTY,max(i.INDATE) as INDATE,i.INTYPE,
		  		   case when to_char(sysdate,'yyyy-MM-dd') &lt;= to_char(min(i.INTERVALDATE),'yyyy-MM-dd') then 0 else 1 end as ISINTERVAL,'' as SPEC
		  	from SPORADIC_GOODS g,GOODSTYPE t,INVENTORY i
		  	where i.FK_GOODSID=g.GOODSID and g.FK_GOODSTYPEID=t.TYPEID and i.INTYPE=1
		  		  and i.QTY!=0 and i.FK_ORGID=#{orgid,jdbcType=DECIMAL}
		  	group by i.FK_GOODSID,g.UNIT,g.GOODSNAME,g.CODE,null,null,t.TYPENAME,i.INTYPE
		  	
		  	union
		  	select i.FK_GOODSID,g.GOODSNAME,g.UNIT,g.CODE as GOODSCODE,i.FK_SKUID,s.SKUCODE,
		  		   t.TYPENAME as GOODSTYPENAME,0 as QTY,max(i.INDATE) as INDATE,i.INTYPE,
		  		   0 as ISINTERVAL,s.SPEC
		  	from GOODS g,GOODSTYPE t,INVENTORY i
		  	left join SKU s on i.FK_SKUID=s.SKUID
		  	where i.FK_GOODSID=g.GOODSID and g.FK_GOODSTYPEID=t.TYPEID and i.INTYPE=0
		  		  and i.FK_ORGID=#{orgid,jdbcType=DECIMAL} 
		  		  and not exists(select 1 from INVENTORY i2 
		  		  				 where i2.QTY>0 and i2.FK_ORGID=i.FK_ORGID
		  		  				 	   and i2.FK_GOODSID=i.FK_GOODSID
		  		  				)
		  	group by i.FK_GOODSID,g.UNIT,g.GOODSNAME,g.CODE,i.FK_SKUID,s.SKUCODE,t.TYPENAME,i.INTYPE,s.SPEC
		  	union
		  	select i.FK_GOODSID,g.GOODSNAME,g.UNIT,g.CODE as GOODSCODE,null as FK_SKUID,null as SKUCODE,
		  		   t.TYPENAME as GOODSTYPENAME,0 as QTY,max(i.INDATE) as INDATE,i.INTYPE,
		  		   0 as ISINTERVAL,'' AS SPEC
		  	from SPORADIC_GOODS g,GOODSTYPE t,INVENTORY i
		  	where i.FK_GOODSID=g.GOODSID and g.FK_GOODSTYPEID=t.TYPEID and i.INTYPE=1
		  		  and i.FK_ORGID=#{orgid,jdbcType=DECIMAL} 
		  		  and not exists(select 1 from INVENTORY i2 
		  		  				 where i2.QTY>0 and i2.FK_ORGID=i.FK_ORGID
		  		  				 	   and i2.FK_GOODSID=i.FK_GOODSID
		  		  				)
		  	group by i.FK_GOODSID,g.UNIT,g.GOODSNAME,g.CODE,null,null,t.TYPENAME,i.INTYPE
	 ) where 1=1 <include refid="param"/>
	 order by isInterval desc,INDATE desc
  </select>
  
  <select id="getStockBatch"  parameterType="java.util.Map"  resultMap="BaseResultMap">
	  select * from (
		  	select i.ID,i.FK_GOODSID,g.GOODSNAME,g.UNIT,g.CODE as GOODSCODE,i.FK_TRACEID,i.TRACENO,i.ORDERNO,
		  		   i.QTY,i.WAREHOUSE,i.INTYPE,i.INDATE,i.PRODATE,i.INTERVALDATE,i.USELIFEDATE,
		  		   case when to_char(sysdate,'yyyy-MM-dd')>to_char(i.INTERVALDATE,'yyyy-MM-dd') 
		  		   		and to_char(sysdate,'yyyy-MM-dd') &lt;=to_char(i.USELIFEDATE,'yyyy-MM-dd') then '临期'
		  		   	 	when to_char(sysdate,'yyyy-MM-dd')>to_char(i.USELIFEDATE,'yyyy-MM-dd') then '过期'
		  		   	 	else '新鲜' end as STATUS,
		  		   case when i.qty>0 then '1'
		  		   		else '0' end as qtystatus,
		  		   t.VOUCHERCODE,t.LIABLEPERSON,od.SPEC_INFO
			from INVENTORY i,GOODS g,BVOUCHER_INDEX t,BVOUCHER_DETAIL d,ORDER_DETAIL od,GOODS_TRACE gt
			where i.FK_GOODSID=g.GOODSID 
				<if test="showZeroInventory!=null and showZeroInventory==0">
				    and i.QTY!=0 
				</if>
				<if test="skuid!=null">
				    and i.FK_SKUID = #{skuid,jdbcType=VARCHAR}				    
				</if>
			
			and i.FK_TRACEID=d.FK_TRACEID
				  and i.FK_TRACEID = gt.ID and gt.FK_ORDER_DETAILID = od.DETAIL_ID
				  and d.FK_INDEXID=t.ID and t.STATUS=0 and t.VOUCHERTYPE=0 and i.FK_ORGID=#{orgid,jdbcType=DECIMAL}
				  and i.FK_GOODSID=#{goodsid,jdbcType=VARCHAR} 
			union
			select i.ID,i.FK_GOODSID,g.GOODSNAME,g.UNIT,g.CODE as GOODSCODE,i.FK_TRACEID,i.TRACENO,i.ORDERNO,
		  		   i.QTY,i.WAREHOUSE,i.INTYPE,i.INDATE,i.PRODATE,i.INTERVALDATE,i.USELIFEDATE,
		  		   case when to_char(sysdate,'yyyy-MM-dd')>to_char(i.INTERVALDATE,'yyyy-MM-dd') 
		  		   		and to_char(sysdate,'yyyy-MM-dd') &lt;=to_char(i.USELIFEDATE,'yyyy-MM-dd') then '临期'
		  		   	 	when to_char(sysdate,'yyyy-MM-dd')>to_char(i.USELIFEDATE,'yyyy-MM-dd') then '过期'
		  		   	 	else '新鲜' end as STATUS,
		  		   	 	case when i.qty>0 then '1'
		  		   		else '0' end as qtystatus,
		  		   t.VOUCHERCODE,t.LIABLEPERSON,'' as SPEC_INFO
			from INVENTORY i,SPORADIC_GOODS g,BVOUCHER_INDEX t,BVOUCHER_DETAIL d
			where i.FK_GOODSID=g.GOODSID 
				<if test="showZeroInventory!=null and showZeroInventory==0">
			    	and i.QTY!=0 
				</if>
			
				  and i.FK_TRACEID=d.FK_TRACEID
				  and d.FK_INDEXID=t.ID and t.STATUS=0 and t.VOUCHERTYPE=0 and i.FK_ORGID=#{orgid,jdbcType=DECIMAL}
				  and i.FK_GOODSID=#{goodsid,jdbcType=VARCHAR} 
	  ) order by qtystatus desc,INDATE desc
	  <!-- 
	  <include refid="orderBy2"/> -->
 </select>
 
 <insert id="addInventoryByOrder" parameterType="com.yj.hqbz.model.inventory.Inventory">
 	insert into INVENTORY(<include refid="Base_Column_List"/>)
 	select #{id,jdbcType=VARCHAR},#{orgid,jdbcType=DECIMAL},tr.FK_GOODSID,tr.FK_GOODS_SKUID,
 		   #{inType,jdbcType=DECIMAL},#{inDate,jdbcType=TIMESTAMP},d.REAL_QTY,d.PRICE_BASIC,
 		   tr.ID,tr.BATCHNO,f.ORDER_NO,tr.FK_ORGID,tr.PRODATE,tr.INTERVALDATE,tr.USELIFEDATE,
 		   ROUND(d.REAL_QTY*d.PRICE_BASIC,2),#{warehouse,jdbcType=VARCHAR}
 	from ORDERFORM f,ORDER_DETAIL d,GOODS_TRACE tr
 	where f.ID=d.FK_ORDERID and d.FK_ORDERID=tr.FK_ORDERID and d.DETAIL_ID=tr.FK_ORDER_DETAILID and tr.TRACE_TYPE=0
 		  and tr.ID=#{traceid,jdbcType=VARCHAR}
 </insert>
 
 <insert id="addInventoryBySporadic" parameterType="com.yj.hqbz.model.inventory.Inventory">
 	insert into INVENTORY(<include refid="Base_Column_List"/>)
 	select #{id,jdbcType=VARCHAR},#{orgid,jdbcType=DECIMAL},tr.FK_GOODSID,tr.FK_GOODS_SKUID,
 		   #{inType,jdbcType=DECIMAL},#{inDate,jdbcType=TIMESTAMP},d.QTY,d.PRICE,
 		   tr.ID,tr.BATCHNO,i.VOUCHERCODE,tr.FK_ORGID,tr.PRODATE,tr.INTERVALDATE,tr.USELIFEDATE,
 		   ROUND(d.QTY*d.PRICE,2),#{warehouse,jdbcType=VARCHAR}
 	from SPORADIC_INDEX i,SPORADIC_DETAIL d,GOODS_TRACE tr
 	where i.ID=d.FK_INDEXID and d.FK_INDEXID=tr.FK_ORDERID and d.ID=tr.FK_ORDER_DETAILID and tr.TRACE_TYPE=1
 		  and tr.ID=#{traceid,jdbcType=VARCHAR}
 </insert>
 
 <update id="outStock" parameterType="com.yj.hqbz.model.inventory.Inventory">
 	update INVENTORY
 	set QTY=QTY-#{qty,jdbcType=DECIMAL},
 	 	TOTAL=ROUND((QTY-#{qty,jdbcType=DECIMAL})*PRICE,2)
 	where ID = #{id,jdbcType=VARCHAR}
 </update>
 
 <!-- 修改入库时间 -->
 
 <update id="updateOrderInStockDate" parameterType="java.lang.String">
 	update ORDER_DETAIL
 	set INSTORE_STATUS=1,
 		INSTORE_DATE=sysdate
 	where DETAIL_ID=#{detailid,jdbcType=VARCHAR}
 </update>
 
 <update id="updateSporadicInStockDate" parameterType="java.lang.String">
 	update SPORADIC_INDEX
 	set STATUS=1,
 		INSTORE_DATE=sysdate
 	where ID=#{indexid,jdbcType=VARCHAR}
 </update>
</mapper>