<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.hqbz.mapper.goods.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.yj.hqbz.model.goods.Goods" >
    <id column="GOODSID" property="goodsid" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="FK_GOODSTYPEID" property="goodsTypeid" jdbcType="DECIMAL" />
    <result column="TYPENAME" property="goodsTypeName" jdbcType="VARCHAR" />
    <result column="GOODSNAME" property="goodsName" jdbcType="VARCHAR" />
    <result column="ALIASNAME" property="aliasName" jdbcType="VARCHAR" />
    <result column="NAMEPY" property="namepy" jdbcType="VARCHAR" />
    <result column="UNIT" property="unit" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="DETAILS" property="details" jdbcType="CLOB" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATEDATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="LASTOPUSER" property="lastOpUser" jdbcType="VARCHAR" />
    <result column="LASTOPDATE" property="lastOpDate" jdbcType="TIMESTAMP" />
    <result column="PIC_URL" property="picUrl" jdbcType="VARCHAR" />
    <result column="THUMBNAIL_URL" property="thumbnailUrl" jdbcType="VARCHAR" />
    <result column="NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="ORGID" property="orgid" jdbcType="VARCHAR" />  
  </resultMap>
  
  <resultMap id="BaseResultMapWithPrice" type="com.yj.hqbz.model.goods.Goods" >
    <id column="GOODSID" property="goodsid" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="FK_GOODSTYPEID" property="goodsTypeid" jdbcType="DECIMAL" />
    <result column="TYPENAME" property="goodsTypeName" jdbcType="VARCHAR" />
    <result column="GOODSNAME" property="goodsName" jdbcType="VARCHAR" />
    <result column="ALIASNAME" property="aliasName" jdbcType="VARCHAR" />
    <result column="NAMEPY" property="namepy" jdbcType="VARCHAR" />
    <result column="UNIT" property="unit" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="LOWER" property="lower" jdbcType="DECIMAL" />
    <result column="HIGH" property="high" jdbcType="DECIMAL" />
    <result column="PIC_URL" property="picUrl" jdbcType="VARCHAR" />
    <result column="THUMBNAIL_URL" property="thumbnailUrl" jdbcType="VARCHAR" />
  </resultMap>
  


  <sql id="Base_Column_List" >
    GOODSID, CODE, FK_GOODSTYPEID, GOODSNAME, ALIASNAME, NAMEPY, UNIT, REMARK, STATUS, 
    CREATOR, CREATEDATE, LASTOPUSER, LASTOPDATE
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select g.*,p.PIC_URL,p.THUMBNAIL_URL
    from GOODS g,SKUPIC p
    where g.GOODSID = #{goodsid,jdbcType=VARCHAR}
    and g.GOODSID = p.FK_GOODSID and p.FK_SKUID is null
  </select>
  
  <select id="selectGoodsInfoBySkuid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select g.GOODSID, g.CODE, g.FK_GOODSTYPEID, g.GOODSNAME, g.ALIASNAME, g.NAMEPY, g.UNIT, g.REMARK, g.STATUS
    from GOODS g,SKU s
    where g.GOODSID = s.FK_GOODSID
    and s.SKUID = #{skuid}
  </select>
  
  <select id="getGoodsByGoodsType" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from GOODS
    where FK_GOODSTYPEID = #{goodsTypeid,jdbcType=DECIMAL} and STATUS = 0
  </select>
  
  <select id="getGoodsCountByGoodsType" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(*)
    from GOODS
    where FK_GOODSTYPEID = #{goodsTypeid,jdbcType=DECIMAL} and STATUS !=2
  </select>
  
  
  <insert id="addGoods" parameterType="com.yj.hqbz.model.goods.Goods">
  	insert into GOODS(
  	GOODSID, CODE, FK_GOODSTYPEID, GOODSNAME, ALIASNAME, NAMEPY, UNIT, REMARK, STATUS,
    CREATOR, CREATEDATE,DETAILS)
  	values(#{goodsid,jdbcType=VARCHAR},
  	(select 'SP'||nvl(TRIM(to_char(max(to_number(substr(CODE,3)))+1,'00000009')),'00000001')
  	from GOODS),
  	#{goodsTypeid,jdbcType=DECIMAL},
  	#{goodsName,jdbcType=VARCHAR},
  	#{aliasName,jdbcType=VARCHAR},
  	#{namepy,jdbcType=VARCHAR},
  	#{unit,jdbcType=VARCHAR},
  	#{remark,jdbcType=VARCHAR},
  	#{status,jdbcType=DECIMAL},
  	#{creator,jdbcType=VARCHAR},
  	sysdate,
  	#{details,jdbcType=CLOB}
  	)
  </insert>
  <update id="updateGoods" parameterType="com.yj.hqbz.model.goods.Goods">
  	update GOODS t
  	set t.FK_GOODSTYPEID=#{goodsTypeid,jdbcType=DECIMAL},
  	t.GOODSNAME=#{goodsName,jdbcType=VARCHAR},
  	t.ALIASNAME=#{aliasName,jdbcType=VARCHAR},
  	t.NAMEPY=#{namepy,jdbcType=VARCHAR},
  	t.UNIT=#{unit,jdbcType=VARCHAR},
  	t.REMARK=#{remark,jdbcType=VARCHAR},
  	t.STATUS=#{status,jdbcType=DECIMAL},
  	t.LASTOPUSER=#{lastOpUser,jdbcType=VARCHAR},
  	t.LASTOPDATE=sysdate,
  	t.DETAILS=#{details,jdbcType=CLOB}
  	where t.GOODSID=#{goodsid,jdbcType=VARCHAR} 
  </update>
  <update id="updateGoodsStatus" parameterType="com.yj.hqbz.model.goods.Goods">
  	update GOODS t
  	set t.STATUS = #{status,jdbcType=DECIMAL},
  	t.LASTOPUSER=#{lastOpUser,jdbcType=VARCHAR},
  	t.LASTOPDATE=#{lastOpDate,jdbcType=TIMESTAMP}
  	where t.GOODSID=#{goodsid,jdbcType=VARCHAR}
  </update>
  <select id="getGoodsListByParam" parameterType="map" resultMap="BaseResultMap" >
  	select
  	g.GOODSID, g.CODE, g.FK_GOODSTYPEID, g.GOODSNAME, g.ALIASNAME, g.NAMEPY, g.UNIT, g.REMARK, g.STATUS, 
    g.CREATOR, g.CREATEDATE, g.LASTOPUSER, g.LASTOPDATE
  	from GOODS g where 0=0
  	<choose>
        <when test="status !=null">
            and g.STATUS = #{status,jdbcType=VARCHAR} 
        </when>
        <otherwise>
            and g.STATUS != 2
        </otherwise>
    </choose>
     <if test="name!=null and name!=''">
		and instr(g.GOODSNAME,#{name,jdbcType=VARCHAR})>0
		</if>
     <if test="code != null" >
       and g.CODE = #{code,jdbcType=DECIMAL}
     </if>
     <if test="typeid !=null">
     	 and g.FK_GOODSTYPEID=#{typeid,jdbcType=DECIMAL}
     </if>
     <if test="businessAttr !=null and businessAttr !=''">
     and exists
     (select 1 from GOODSTYPE t where t.BUSINESSATTR=#{businessAttr} and t.TYPEID=g.FK_GOODSTYPEID)
     </if>
  	order by CREATEDATE desc
  </select>
  
  <!-- 根据参数和客户获取可购买的商品列表 -->
  <select id="getCustomerCanBuyGoodsListByParam" resultMap="BaseResultMapWithPrice" parameterType="java.util.Map">
  	select * from (select distinct g.goodsid,g.goodsname,g.aliasname,g.unit ,g.CREATEDATE,pic.PIC_URL,pic.THUMBNAIL_URL,
  	min(orgSku.PRICE_BASIC) as lower,max(orgSku.PRICE_BASIC) as high from 
	GOODS g,SKU sku,ORG_SKU orgSku,SKUPIC pic 
	where g.goodsid = sku.fk_goodsid
	<if test="goodsTypeid!=null">
	    and exists(
	    	select * from (
				select * 
				from GOODSTYPE 		
	    		WHERE STATUS !=2 
				start with FK_PARENTID = #{goodsTypeid,jdbcType=DECIMAL}
				connect by prior  TYPEID = FK_PARENTID
	      	union
	      		select * 
				from GOODSTYPE 		
	      		where STATUS !=2  and TYPEID = #{goodsTypeid,jdbcType=DECIMAL}
	     	 ) t where g.fk_goodstypeid = t.typeid
	      )
      <!-- 
		and exists(
			select * 
			from GOODSTYPE 		
    		WHERE STATUS !=2
			start with FK_PARENTID = #{goodsTypeid,jdbcType=DECIMAL}
			connect by prior  TYPEID = FK_PARENTID
		) -->
	</if>
	<if test="keywords!=null and keywords!=''">
		and( instr(g.goodsname,#{keywords,jdbcType=VARCHAR})>0
			or instr(g.aliasname,#{keywords,jdbcType=VARCHAR})>0
		)
	</if>
	and sku.skuid = orgsku.fk_skuid
	and orgsku.status=0
	and g.goodsid = pic.FK_GOODSID and pic.FK_SKUID is null
	and exists (select 1 from ORG_RELATIONSHIP ship where (orgsku.fk_orgid=ship.fk_orgnorgid and ship.fk_targetorgid=#{customerOrgId,jdbcType=DECIMAL}) 
		or (orgsku.fk_orgid=ship.fk_targetorgid and ship.fk_orgnorgid=#{customerOrgId,jdbcType=DECIMAL}))
	group by g.goodsid,g.goodsname,g.aliasname,g.unit ,g.CREATEDATE,pic.PIC_URL,pic.THUMBNAIL_URL)
	<choose>
		<when test="orderBy=='price'">
			<if test="orderType==1">
				order by high
			</if>
			<if test="orderType!=1">
				order by lower
			</if>
		</when>
		<otherwise>
			order by CREATEDATE
		</otherwise>		
	</choose>
	<if test="orderType==1">
		desc
	</if>
	,goodsid
  </select>
  <select id="getGoodsByGoodsidAndOrgid" parameterType="java.util.Map" resultMap="BaseResultMap">
  select distinct org.orgid,g.GOODSID, g.CODE,org.name,gt.typename,g.goodsname,
  		g.aliasname,g.unit, pic.pic_url,pic.thumbnail_url,g.REMARK
  from goods g,goodstype gt,organization org,org_sku osku,skupic pic
  where g.fk_goodstypeid=gt.typeid and osku.fk_orgid=org.orgid 
  		and pic.fk_goodsid=g.goodsid and osku.status=0
  		and pic.fk_skuid is null 
  		and g.goodsid=#{goodsid,jdbcType=VARCHAR} 
  		and org.orgid=#{orgid,jdbcType=VARCHAR}
  </select>
  
</mapper>