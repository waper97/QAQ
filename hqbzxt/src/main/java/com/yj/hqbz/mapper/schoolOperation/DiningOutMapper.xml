<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.hqbz.mapper.schoolOperation.DiningOutMapper" >
  <resultMap id="BaseResultMap" type="com.yj.hqbz.model.schoolOperation.DiningOut" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="OUT_DATE" property="outDate" jdbcType="TIMESTAMP" />
    <result column="MENUTYPE" property="menuType" jdbcType="DECIMAL" />
    <result column="FK_ORGID" property="orgid" jdbcType="DECIMAL" />
    <result column="ORGNAME" property="orgName" jdbcType="DECIMAL" />
    <result column="DISHNAME" property="dishName" jdbcType="VARCHAR" />
    <result column="COOKERNAME" property="cookerName" jdbcType="VARCHAR" />
    <result column="MATERIALNAME" property="materialName" jdbcType="VARCHAR" />
    <result column="CHECKER" property="checker" jdbcType="VARCHAR" />
    <result column="OUT_TIME" property="outTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="MENUCODE" property="menuCode" jdbcType="VARCHAR" />
    <result column="DELETESTATUS" property="deleteStatus" jdbcType="DECIMAL" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="CREATEDATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="LASTOPUSER" property="lastOpUser" jdbcType="VARCHAR" />
    <result column="LASTOPDATE" property="lastOpDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, OUT_DATE, MENUTYPE, FK_ORGID, DISHNAME, COOKERNAME, MATERIALNAME, CHECKER, OUT_TIME, 
    STATUS, MENUCODE, DELETESTATUS, CREATOR, CREATEDATE, LASTOPUSER, LASTOPDATE
  </sql>
  <sql id="param">
  	select 
    d.ID, d.OUT_DATE, d.MENUTYPE, d.FK_ORGID, d.DISHNAME, d.COOKERNAME, d.MATERIALNAME, d.CHECKER, d.OUT_TIME, 
    d.STATUS, d.MENUCODE, d.DELETESTATUS, d.CREATOR, d.CREATEDATE, d.LASTOPUSER, d.LASTOPDATE,o.NAME as ORGNAME
    from DINING_OUT d,ORGANIZATION o
    where
  	d.DELETESTATUS=0 and d.FK_ORGID=o.ORGID
    <if test="menuType !=null ">
   	and  d.MENUTYPE = #{menuType,jdbcType=DECIMAL}
    </if>
    <if test="beginDate !=null">
    and d.OUT_DATE >= #{beginDate,jdbcType=TIMESTAMP}
    </if>
    <if test="endDate !=null">
    and d.OUT_DATE &lt;= #{endDate,jdbcType=TIMESTAMP}
    </if>
    <if test="creator !=null">
    and instr(d.CREATOR,#{creator,jdbcType=VARCHAR})>0
    </if>
    <choose>
  		<when test="isManager == null">
  			and d.FK_ORGID = #{orgid,jdbcType=DECIMAL}
  		</when>
  		<otherwise>
  			<!-- 是食堂管理员，获取学校机构id,再获取学校所有食堂机构id,获取在该学校食堂的人员 -->
  			and 
			instr(','||(select ob.fk_orgids from ORG_BELONG ob 
						where instr(','||ob.fk_orgids||',' , 
						','||#{orgid,jdbcType=DECIMAL}||',')>0) ||',' , ','||d.FK_ORGID||',')>0
  		</otherwise>
  	</choose>
  	<if test="status !=null">
  	and d.STATUS=#{status,jdbcType=DECIMAL}
  	</if>
  </sql>
  <sql id="orderBy">
  	<choose>
  		<when test="orderBy!=null and orderBy!=''">
  			<choose>
		  		<when test="orderBy=='dishName' or orderBy=='cookerName' or orderBy=='materialName' or orderBy=='checker' 
		  		or orderBy=='creator' or orderBy=='lastOpUser'">
		  			NLSSORT(#{orderBy},'NLS_SORT=SCHINESE_PINYIN_M') 
		  		</when>
		  		<otherwise>
		  			#{orderBy}
		  		</otherwise>
		  	</choose>
		  	<if test="orderType==1">
		  		desc
		  	</if>
  		</when>
  		<otherwise>
  			t.STATUS asc ,t.MENUCODE desc
  		</otherwise>
  	</choose>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    d.ID, d.OUT_DATE, d.MENUTYPE, d.FK_ORGID, d.DISHNAME, d.COOKERNAME, d.MATERIALNAME, d.CHECKER, d.OUT_TIME, 
    d.STATUS, d.MENUCODE, d.DELETESTATUS, d.CREATOR, d.CREATEDATE, d.LASTOPUSER, d.LASTOPDATE,o.NAME as ORGNAME
    from DINING_OUT d,ORGANIZATION o
    where d.DELETESTATUS=0 and d.FK_ORGID=o.ORGID
    <choose>
    	<when test="id !=null">
    	and d.ID = #{id,jdbcType=VARCHAR}
    	</when>
    	<otherwise>
    	and d.MENUCODE = #{menuCode,jdbcType=VARCHAR}
    	</otherwise>
    </choose>
  </select>
  <delete id="deleteById" parameterType="com.yj.hqbz.model.schoolOperation.DiningOut" >
    update DINING_OUT 
    set DELETESTATUS = #{deleteStatus,jdbcType=DECIMAL},
    	LASTOPUSER=#{lastOpUser,jdbcType=VARCHAR},
	    LASTOPDATE=#{lastOpDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yj.hqbz.model.schoolOperation.DiningOut" >
    insert into DINING_OUT (ID, OUT_DATE, MENUTYPE, 
      FK_ORGID, DISHNAME, COOKERNAME, 
      MATERIALNAME, CHECKER, OUT_TIME, 
      STATUS, MENUCODE, DELETESTATUS, 
      CREATOR, CREATEDATE, LASTOPUSER, 
      LASTOPDATE)
    values (#{id,jdbcType=VARCHAR}, #{outDate,jdbcType=TIMESTAMP}, #{menuType,jdbcType=DECIMAL}, 
      #{orgid,jdbcType=DECIMAL}, #{dishName,jdbcType=VARCHAR}, #{cookerName,jdbcType=VARCHAR}, 
      #{materialName,jdbcType=VARCHAR}, #{checker,jdbcType=VARCHAR}, #{outTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=DECIMAL}, 
      <choose>
      	<when test="menuCode != null">
      	#{menuCode,jdbcType=VARCHAR}, 
      	</when>
      	<otherwise>
	    (select 'Z'||to_char(sysdate,'yyyyMMdd')||NVL(TRIM(to_char(max(substr(t.menucode,10))+1,'0009')),'0001')
	    from DINING_OUT t where length(t.menucode) = 13),
      	</otherwise>
      </choose>
      #{deleteStatus,jdbcType=DECIMAL}, 
      #{creator,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{lastOpUser,jdbcType=VARCHAR}, 
      #{lastOpDate,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.yj.hqbz.model.schoolOperation.DiningOut" >
    update DINING_OUT
    <set>
      	STATUS = #{status,jdbcType=DECIMAL},
    	<if test="outDate != null">
    	OUT_DATE = #{outDate,jdbcType=TIMESTAMP},
    	</if>
    	<if test="menuType !=null">
      	MENUTYPE = #{menuType,jdbcType=DECIMAL},
    	</if>
    	<if test="orgid !=null">
    	FK_ORGID = #{orgid,jdbcType=DECIMAL},
    	</if>
    	<if test="dishName !=null">
    	DISHNAME = #{dishName,jdbcType=VARCHAR},
    	</if>
    	<if test="cookerName !=null">
    	COOKERNAME = #{cookerName,jdbcType=VARCHAR},
    	</if>
    	<if test="materialName !=null">
    	MATERIALNAME = #{materialName,jdbcType=VARCHAR},
    	</if>
    	<if test="checker !=null">
    	CHECKER = #{checker,jdbcType=VARCHAR},
    	</if>
    	<if test="outTime !=null">
    	OUT_TIME = #{outTime,jdbcType=TIMESTAMP},
    	</if>
    	<if test="creator !=null">
    	CREATOR = #{creator,jdbcType=VARCHAR},
    	</if>
    	<if test="createDate !=null">
    	CREATEDATE = #{createDate,jdbcType=TIMESTAMP},
    	</if>
    	<if test="lastOpUser !=null">
    	LASTOPUSER = #{lastOpUser,jdbcType=VARCHAR},
    	</if>
    	<if test="lastOpDate !=null">
    	LASTOPDATE = #{lastOpDate,jdbcType=TIMESTAMP},
    	</if>
    	<if test="menuCode != null">
    	MENUCODE = #{menuCode,jdbcType=VARCHAR},
    	</if>
    	<if test="deleteStatus != null">
    	DELETESTATUS = #{deleteStatus,jdbcType=DECIMAL},
    	</if>
    </set>
      where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getListByParam" parameterType="map" resultMap="BaseResultMap">
  	select * from (
  	( <include refid="param" />
    and trunc(d.OUT_DATE) = trunc(sysdate) and d.status=0) <!-- 未出餐的仅当天的 -->
    union all
    (<include refid="param" />
    and d.status=1)
    ) t
	order by <include refid="orderBy" />
  </select>
</mapper>